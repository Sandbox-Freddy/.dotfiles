# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;
  boot.initrd.systemd.enable = true;
  security.tpm2.enable = true;

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "ahci"
    "nvme"
    "usb_storage"
    "usbhid"
    "sd_mod"
  ];

  boot.initrd.kernelModules = [
    "tpm"
    "tpm_tis"
    "tpm_crb"
  ];

  boot.kernelModules = ["kvm-intel"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/1dd31ff9-e64a-40c7-afdc-8570b2edc840";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-f300e8e7-d038-48fd-ac50-d580ed9fa567".device = "/dev/disk/by-uuid/f300e8e7-d038-48fd-ac50-d580ed9fa567";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/A590-5D57";
    fsType = "vfat";
    options = ["fmask=0077" "dmask=0077"];
  };

  boot.initrd.luks.devices.mydata.device = "/dev/disk/by-uuid/0d22a67a-f085-4ccf-adbe-402cb4f38cc0";

  fileSystems."/mnt/mydata" = {
    device = "/dev/mapper/mydata";
    fsType = "ext4";
    options = ["noatime"];
  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
